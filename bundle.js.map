{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/game.js","webpack:///./src/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mE;;;;;;;;;;;;ACpFf;AAAA;AAA0B;;AAE1B;AACA;AACA,mBAAmB,6CAAI;AACvB;;AAEA,CAAC,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// import Background from './background';\n\nclass Game {\n  constructor(canvas) {\n    // const background = new Background()\n    // let canvas = canvas\n    // canvas.innerHTML = background.draw()\n    // let killedTieFighters = 0\n  }\n\n  play() {\n\n  }\n\n  background() {\n    let img = new Image();\n\n    img.src = '../assets/stars.png';\n    let CanvasXSize = window.innerWidth;\n    let CanvasYSize = window.innerHeight;\n    let speed = 40;\n    let scale = 1.05;\n    let y = -4.5;\n\n    let dx = 0.75;\n    let imgW = window.innerWidth;\n    let imgH = window.innerHeight;\n    let x = 0;\n    let clearX;\n    let clearY;\n    let ctx;\n\n    img.onload = function () {\n\n\n      if (imgW > CanvasXSize) {\n        x = CanvasXSize - imgW;\n      }\n      if (imgW > CanvasXSize) {\n        clearX = imgW;\n      } else {\n        clearX = CanvasXSize;\n      }\n      if (imgH > CanvasYSize) {\n        clearY = imgH;\n      } else {\n        clearY = CanvasYSize;\n      }\n\n      const canvas = document.getElementById('canvas');\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      ctx = canvas.getContext('2d');\n\n      return setInterval(draw, speed);\n    }\n\n    function draw() {\n      ctx.clearRect(0, 0, clearX, clearY);\n\n      if (imgW <= CanvasXSize) {\n        if (x > CanvasXSize) {\n          x = -imgW + x;\n        }\n        if (x > 0) {\n          ctx.drawImage(img, -imgW + x, y, imgW, imgH);\n        }\n        if (x - imgW > 0) {\n          ctx.drawImage(img, -imgW * 2 + x, y, imgW, imgH);\n        }\n      } else {\n        if (x > (CanvasXSize)) {\n          x = CanvasXSize - imgW;\n        }\n        if (x > (CanvasXSize - imgW)) {\n          ctx.drawImage(img, x - imgW + 1, y, imgW, imgH);\n        }\n      }\n      ctx.drawImage(img, x, y, imgW, imgH);\n      x += dx;\n    }\n  }\n}\n\nexport default Game","import Game from './game';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById('canvas');\n  const game = new Game(canvas)\n  game.background()\n\n});"],"sourceRoot":""}